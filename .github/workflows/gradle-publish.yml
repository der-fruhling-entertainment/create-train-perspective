# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Package & Publish All Versions

on:
  workflow_dispatch:
    inputs:
      version:
        description: The version to publish
        required: true
      master-ref:
        default: "master"
        description: The 1.20.1 version of the mod
        required: true
      port-19-ref:
        default: "port-1.19.2"
        description: The 1.19.2 version of the mod
        required: true
      publish-ghp:
        default: true
        description: Publish to GitHub packages
        required: true
        type: boolean
      publish-modrinth:
        default: true
        description: Publish to Modrinth
        required: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      matrix:
        include:
          - branch: ${{ inputs.master-ref }}
            version: 1.20.1
          - branch: ${{ inputs.port-19-ref }}
            version: 1.19.2

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      - name: Build with Gradle
        run: ./gradlew build

  publish-ghp:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: build
    if: inputs.publish-ghp
    strategy:
      matrix:
        include:
          - branch: ${{ inputs.master-ref }}
            version: 1.20.1
          - branch: ${{ inputs.port-19-ref }}
            version: 1.19.2
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
      # the publishing section of your build.gradle
      - name: Publish to GitHub Packages
        run: ./gradlew publish
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-modrinth:
    runs-on: ubuntu-latest
    environment:
      name: Modrinth
      url: https://modrinth.com/mod/create-train-perspective
    permissions:
      contents: read
    needs: build
    if: inputs.publish-modrinth
    strategy:
      matrix:
        branch:
          - ${{ inputs.master-ref }}
          - ${{ inputs.port-19-ref }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
      # the publishing section of your build.gradle
      - name: Publish to Modrinth
        run: ./gradlew modrinth
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
